import ganache from "ganache";
import { Web3 } from "web3";
import assert from "assert";
import { bytecode, abi } from "../compile.js";
// updated ganache and web3 imports added for convenience

const web3 = new Web3(ganache.provider());
 
let accounts;
let inbox;

const init = async () => {
  // get all accounts that are pregenerated by ganache locally automatically
  accounts = await web3.eth.getAccounts();

  // use one of these accounts to deploy our contract
  let contract = new web3.eth.Contract(abi);
  

  // this doesn't deploy anything, we need to create a transaction to deploy it 
  const deployment = contract.deploy({
    data: bytecode,
    // the thing that will go to the constructor function and is in form of array since there can be multiple parameters
    arguments: ["Hi there"],
  });


  // actually send the transaction to deploy the contract
  inbox = await deployment.send({
    from: accounts[0],
    gas: '30000000', 
  });

  console.log("Contract deployed to:", inbox.options);
};

init();




// console.log("Bytecode length:", bytecode.length);
// console.log("Bytecode starts with 0x:", bytecode.startsWith("0x"));


// ---------------------------------- FOR TESTING ---------------------------------------------
//     beforeEach(async()=>{
// })

// describe('Testing Something',()=>{
//     it('',()=>{

//     })
// })
